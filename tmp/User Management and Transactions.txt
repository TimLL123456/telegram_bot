-- User table
CREATE TABLE Users (
    user_id BIGINT PRIMARY KEY,
    username VARCHAR(50),
    default_currency VARCHAR(3) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Categories Table:
CREATE TABLE Categories (
    category_id SERIAL PRIMARY KEY,
    category_type VARCHAR(10) NOT NULL CHECK (category_type IN ('Income', 'Expense')),
    category_name VARCHAR(50) NOT NULL -- Groceries, Salary
);

-- Transactions Table:
CREATE TABLE Transactions (
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    transaction_id SERIAL PRIMARY KEY,
    user_id BIGINT NOT NULL,
    date DATE NOT NULL,
    category_id INTEGER NOT NULL,
    description TEXT,
    currency VARCHAR(3) NOT NULL,
    amount NUMERIC(10,2) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);

-- Transaction History Table:
CREATE TABLE Transaction_History (
    history_id SERIAL PRIMARY KEY,
    transaction_id INTEGER NOT NULL,
    date DATE NOT NULL,
    category_id INTEGER NOT NULL,
    description TEXT,
    currency VARCHAR(3) NOT NULL,
    amount NUMERIC(10,2) NOT NULL,
    modified_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modification_type VARCHAR(10) NOT NULL,
    FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id),
    FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);

CREATE INDEX idx_transaction_history_transaction_id ON Transaction_History(transaction_id);
CREATE INDEX idx_transaction_history_modified_at ON Transaction_History(modified_at);